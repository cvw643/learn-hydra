###########################################################################
#######             FOR DEMONSTRATION PURPOSES ONLY                 #######
###########################################################################
#                                                                         #
# If you have not yet read the tutorial, do so now:                       #
#  https://www.ory.sh/docs/hydra/5min-tutorial                            #
#                                                                         #
# This set up is only for demonstration purposes. The login               #
# endpoint can only be used if you follow the steps in the tutorial.      #
#                                                                         #
###########################################################################

version: '3.7'

services:

  hydra:
    image: oryd/hydra:v1.10.6
    container_name: hydra
#    ports:
#      - "4444:4444" # Public port
#      - "4445:4445" # Admin port
#      - "5555:5555" # Port for hydra token user
    command:
      serve -c /etc/config/hydra/hydra.yml all --dangerous-force-http
    volumes:
      -
        type: bind
        source: ./5-min
        target: /etc/config/hydra
    environment:
      - DSN=mysql://root:root@tcp(localhost:3306)/hydra?max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    network_mode: host

  hydra-migrate:
    image: oryd/hydra:v1.10.6
    container_name: hydra-migrate
    environment:
      - DSN=mysql://root:root@tcp(localhost:3306)/hydra?max_conns=20&max_idle_conns=4
    command:
      migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      -
        type: bind
        source: ./5-min
        target: /etc/config/hydra
    restart: on-failure
    network_mode: host

  consent:
    container_name: consent
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
    image: oryd/hydra-login-consent-node:v1.10.6
#    ports:
#      - "3000:3000"
    restart: unless-stopped
    network_mode: host
